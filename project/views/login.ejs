<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <style>
    body {
      background-color: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .login-container {
      background-color: white;
      padding: 40px;
      border-radius: 10px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      text-align: center;
      width: 400px;
    }

    .loginbox h1 {
      font-size: 2em;
      margin-bottom: 20px;
      padding: 10px;
      border: 1px solid #000;
      border-radius: 5px;
    }

    .form-group {
      margin-bottom: 20px;
      text-align: left;
    }

    .form-group label {
      display: block;
      font-weight: bold;
      margin-bottom: 5px;
    }

    .form-group input {
      width: 100%;
      padding: 15px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
      font-size: 1em;
    }

    .form-options {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .form-options div {
      display: flex;
      align-items: center;
    }

    .form-options input {
      margin-right: 5px;
    }

    .form-options a {
      color: lightslategray;
      text-decoration: none;
      font-size: 0.9em;
    }

    .form-options a:hover {
      text-decoration: underline;
    }

    .btn {
      background-color: #8ac7da;
      color: #fff;
      border: none;
      padding: 15px;
      border-radius: 5px;
      cursor: pointer;
      font-size: 1.2em;
      width: 100%;
      margin-top: 20px;
    }

    .btn:hover {
      background-color: #8ac7da;
    }

    .signup {
      margin-top: 20px;
      font-size: 0.9em;
    }

    .signup a {
      color: lightslategray;
      text-decoration: none;
    }

    .signup a:hover {
      text-decoration: underline;
    }


    /* 반응형이다 */
    @media screen and (max-width: 768px) {
      .login-container {
        width: 90%; /* 모바일 너비 */
        padding: 20px; 
      }

      .loginbox h1 {
        font-size: 1.8em; 
        padding: 8px; 
      }

      .form-group input {
        padding: 12px;
        font-size: 0.9em; 
      }

      .form-options {
        flex-direction: column; 
        align-items: flex-start; 
        margin-bottom: 10px; 
      }

      .form-options div {
        margin-bottom: 10px; 
      }

      .login-container {
      box-shadow: none;

      .form-options a {
        font-size: 0.8em; 
      }

      .btn {
        padding: 12px; 
        font-size: 1em;
      }

      .signup {
        font-size: 0.8em;
      }
    }
  }


  </style>
  <title>COLLA 로그인</title>
</head>
<body>
  <div class="login-container">
    <div class="loginbox">
        <h1>로그인</h1>
    </div>
    
    <form id="loginForm">
      <div class="form-group">
        <label for="email">이메일</label>
        <input type="email" id="email" name="email" placeholder="email" required onkeyup="emailenterkey()"/>
      </div>
      <div class="form-group">
        <label for="password">비밀번호</label>
        <input type="password" id="password" name="password" placeholder="비밀~번호" required onkeyup="enterkey()" />
      </div>
      <div class="form-options">
        <div>
          <input type="checkbox" id="remember-email" onchange="emailRemember()" defaltChecked={true} />
          <label for="remember-email" >이메일 기억하기</label>
        </div>
        <div>
          <input type="checkbox" id="keep-logged-in" />
          <label for="keep-logged-in">로그인 상태유지</label>
        </div>
        <a href="#">비밀번호 찾기</a>
      </div>
      <button type="button" class="btn" onclick="loginFunc()" id="loginbtn">로그인</button>
    </form>
    <div class="signup">
      <span>콜라가 처음이신가요? <a href="/signup">회원가입</a></span>
    </div>
  </div>

  <script>


    // 로그인 상태에서 로그인 페이지로 강제 이동시 main.으로 바로 이동
      function loginCheck () {
       const token = localStorage.getItem('token')
              console.log(token,'토큰')

            if(token){
              return  document.location.href = '/main';
            }
             
      }
      loginCheck();

      const keepEmail = localStorage.getItem('email');
      const checkEmail = localStorage.getItem('check');
  
      


      if(keepEmail){
        console.log('이메일들어옴');
        document.querySelector('#email').value = keepEmail;
      };
      if(checkEmail){
        console.log('이메일 체크 들어옴', checkEmail);
        document.querySelector('#remember-email').checked = checkEmail;
      };
      
    

      function emailRemember (){

        const keepEmail = document.querySelector('#email').value;
        const checkEmail = document.querySelector('#remember-email').checked;

        localStorage.setItem('checkEmail',checkEmail);

        if(keepEmail && checkEmail){
          localStorage.setItem('email', keepEmail);
          
        }
        if(!checkEmail){
          localStorage.removeItem('email');
        }
       
      }


    //아이디 칸에서 엔터키 입력시 다음칸 이동
    async function emailenterkey() {
      if(window.event.keyCode === 13){
        const nextpassword = document.querySelector('#password')
        await nextpassword.focus()
      }
    }
    //비밀번호 칸에서 엔터키 입력시 유효성 체크
    async function enterkey() {
  if (window.event.keyCode === 13) {
    const password = document.querySelector('#password')

    if(password.value === ''){
      alert('비밀번호를 입력해주세요')
      return;
    } 
    const res = await axios({
              method: 'post',
              url: '/api/colla/login',
              data: {
                  email: document.querySelector('#email').value,
                  password: document.querySelector('#password').value,
                  keepEmail: document.querySelector('#remember-email').checked,
                  keepLogin: document.querySelector('#keep-logged-in').checked,
              },


          }).then(
            res =>{
              if (res.data.result) {
              alert('환영합니다');
              localStorage.setItem('token', res.data.response.token);
              document.location.href = '/main';
          } else {
            alert(res.data.message)
          };

            }
          );
  }
}
//로그인 버튼 클릭시 유효성 체크
      async function loginFunc() {
          const res = await axios({
              method: 'post',
              url: '/api/colla/login',
              data: {
                  email: document.querySelector('#email').value,
                  password: document.querySelector('#password').value,
                  keepEmail: document.querySelector('#remember-email').checked,
                  keepLogin: document.querySelector('#keep-logged-in').checked,
              },
              
              
          }).then(
            res =>{
              if (res.data.result) {
              alert('환영합니다');
              localStorage.setItem('token', res.data.response.token);
              document.location.href = '/main';
          } else {
            alert(res.data.message)
          };

            }
          );
      };


    // document.getElementById('loginForm').addEventListener('submit', function(event) {
    //   event.preventDefault(); 
      
    //   const email = document.getElementById('email').value;
    //   const password = document.getElementById('password').value;
    //   const rememberMe = document.getElementById('keep-logged-in').checked;

    //   fetch('/api/colla/login', {
    //     method: 'POST',
    //     headers: {
    //       'Content-Type': 'application/json',
    //     },
    //     body: JSON.stringify({ email, password, rememberMe }),
    //   })
    //   .then(response => {
    //     console.log(response);
   
    //     return response.json();
    //   })
    //   .then(data => {
    //     console.log(data);
    //     if (!data.result) {
    //       throw new Error('로그인 실패');
    //     }
    //     alert('환영합니다'); 
    //   })
    //   .catch(error => {
    //     alert('아이디나 비밀번호를 확인해주세요!'); 
    //   });
    // });

    // window.onload = function() {
    //   const cookies = document.cookie.split(';');
    //   console.log('받아온쿠키들이 어떻게 보이는지 보자', cookies);
    //   for (let cookie of cookies) {
    //     const [key, value] = cookie.trim().split('=');
    //     if (key === 'email') {
    //       document.getElementById('email').value = value; 
    //       break;
    //     }
    //   }
    // };



  </script>
  
</body>
</html>
